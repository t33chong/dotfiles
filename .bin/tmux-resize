#!/usr/bin/env python3

# Copy current layout:
# tmux lsw -F "#{window_active} #{window_layout}" | grep "^1" | awk '{print $2}' | tr -d '\n' | pbcopy

LAYOUTS = {
    'Acer': {
        3: ['036d,148x118,0,0[148x38,0,0,0,148x38,0,39,14,148x40,0,78,13]'],
        4: ['459e,148x118,0,0{74x118,0,0[74x59,0,0,0,74x58,0,60,15],73x118,75,0[73x59,75,0,14,73x58,75,60,13]}'],
    },
    'Lenovo 1/2': {
        3: [
            'e008,191x104,0,0{95x104,0,0,5,95x104,96,0[95x52,96,0,6,95x51,96,53,7]}',
            '0f8d,189x104,0,0{94x104,0,0[94x52,0,0,140,94x51,0,53,153],94x104,95,0,139}',
        ],
        5: [
            'f64f,191x104,0,0{95x104,0,0[95x52,0,0,5,95x51,0,53,8],95x104,96,0[95x26,96,0,6,95x25,96,27,9,95x51,96,53,7]}',
            'adbb,189x104,0,0{94x104,0,0[94x52,0,0,140,94x51,0,53,155],94x104,95,0[94x52,95,0,153,94x25,95,53,139,94x25,95,79,156]}',
        ],
        6: ['b5be,191x104,0,0{95x104,0,0[95x52,0,0,5,95x51,0,53,8],95x104,96,0[95x26,96,0,6,95x25,96,27,9,95x25,96,53,7,95x25,96,79,10]}'],
        7: [
            'cc2e,191x104,0,0{95x104,0,0[95x26,0,0,5,95x25,0,27,11,95x51,0,53,8],95x104,96,0[95x26,96,0,6,95x25,96,27,9,95x25,96,53,7,95x25,96,79,10]}',
            '5173,189x104,0,0{94x104,0,0[94x52,0,0,140,94x25,0,53,158,94x25,0,79,159],94x104,95,0[94x26,95,0,155,94x25,95,27,153,94x25,95,53,139,94x25,95,79,156]}',
        ],
        8: ['1df7,191x104,0,0{95x104,0,0[95x26,0,0,5,95x25,0,27,11,95x25,0,53,8,95x25,0,79,12],95x104,96,0[95x26,96,0,6,95x25,96,27,9,95x25,96,53,7,95x25,96,79,10]}'],
    },
    'Lenovo': {
        3: ['601e,383x106,0,0{127x106,0,0,24,127x106,128,0,25,127x106,256,0,26}'],
        4: [
            'b083,383x106,0,0{95x106,0,0,24,95x106,96,0,27,95x106,192,0,25,95x106,288,0,26}',
            '10dd,383x106,0,0{127x106,0,0,153,127x106,128,0,140,127x106,256,0[127x53,256,0,164,127x52,256,54,165]}',
            '89d7,383x106,0,0{127x106,0,0[127x53,0,0,153,127x52,0,54,166],127x106,128,0,140,127x106,256,0,164}',
        ],
        5: ['c41e,383x106,0,0{95x106,0,0,24,95x106,96,0,27,95x106,192,0,25,95x106,288,0[95x53,288,0,26,95x52,288,54,28]}'],
        6: ['8343,383x106,0,0{95x106,0,0[95x53,0,0,24,95x52,0,54,29],95x106,96,0,27,95x106,192,0,25,95x106,288,0[95x53,288,0,26,95x52,288,54,28]}'],
        7: ['728f,383x106,0,0{95x106,0,0[95x53,0,0,24,95x52,0,54,29],95x106,96,0,27,95x106,192,0[95x53,192,0,25,95x52,192,54,30],95x106,288,0[95x53,288,0,26,95x52,288,54,28]}'],
        8: ['1403,383x106,0,0{95x106,0,0[95x53,0,0,24,95x52,0,54,29],95x106,96,0[95x53,96,0,27,95x52,96,54,31],95x106,192,0[95x53,192,0,25,95x52,192,54,30],95x106,288,0[95x53,288,0,26,95x52,288,54,28]}'],
        9: ['e1bc,383x106,0,0{95x106,0,0[95x53,0,0,24,95x52,0,54,29],95x106,96,0[95x53,96,0,27,95x52,96,54,31],95x106,192,0[95x53,192,0,25,95x52,192,54,30],95x106,288,0[95x53,288,0,26,95x26,288,54,28,95x25,288,81,32]}'],
        10: ['078f,383x106,0,0{95x106,0,0[95x53,0,0,24,95x52,0,54,29],95x106,96,0[95x53,96,0,27,95x52,96,54,31],95x106,192,0[95x53,192,0,25,95x52,192,54,30],95x106,288,0[95x26,288,0,26,95x26,288,27,33,95x26,288,54,28,95x25,288,81,32]}'],
        11: ['17cd,383x106,0,0{95x106,0,0[95x53,0,0,24,95x26,0,54,29,95x25,0,81,34],95x106,96,0[95x53,96,0,27,95x52,96,54,31],95x106,192,0[95x53,192,0,25,95x52,192,54,30],95x106,288,0[95x26,288,0,26,95x26,288,27,33,95x26,288,54,28,95x25,288,81,32]}'],
        12: ['d2ac,383x106,0,0{95x106,0,0[95x26,0,0,24,95x26,0,27,35,95x26,0,54,29,95x25,0,81,34],95x106,96,0[95x53,96,0,27,95x52,96,54,31],95x106,192,0[95x53,192,0,25,95x52,192,54,30],95x106,288,0[95x26,288,0,26,95x26,288,27,33,95x26,288,54,28,95x25,288,81,32]}'],
    },
    'Native': {
        2: ['4c20,204x59,0,0{102x59,0,0,133,101x59,103,0,134}'],
        3: ['e39a,204x59,0,0{102x59,0,0,133,101x59,103,0[101x29,103,0,134,101x29,103,30,138]}'],
        4: ['6616,204x59,0,0{102x59,0,0[102x29,0,0,133,102x29,0,30,139],101x59,103,0[101x29,103,0,134,101x29,103,30,138]}'],
        5: ['8422,204x59,0,0{102x59,0,0[102x29,0,0,133,102x29,0,30,139],101x59,103,0[101x29,103,0,134,101x14,103,30,138,101x14,103,45,140]}'],
        6: ['e02f,204x59,0,0{102x59,0,0[102x29,0,0,155,102x29,0,30,157],101x59,103,0[101x14,103,0,156,101x14,103,15,161,101x14,103,30,158,101x14,103,45,160]}'],
        7: ['2279,204x59,0,0{102x59,0,0[102x29,0,0,155,102x14,0,30,157,102x14,0,45,162],101x59,103,0[101x14,103,0,156,101x14,103,15,161,101x14,103,30,158,101x14,103,45,160]}'],
        8: ['e68c,204x59,0,0{102x59,0,0[102x14,0,0,155,102x14,0,15,163,102x14,0,30,157,102x14,0,45,162],101x59,103,0[101x14,103,0,156,101x14,103,15,161,101x14,103,30,158,101x14,103,45,160]}'],
    },
    'ViewSonic': {
        2: ['21c5,272x75,0,0{136x75,0,0,0,135x75,137,0,16}'],
        3: ['93a0,272x75,0,0{90x75,0,0,0,90x75,91,0,17,90x75,182,0,16}'],
        4: ['e2c9,272x75,0,0{90x75,0,0,0,90x75,91,0,17,90x75,182,0[90x37,182,0,16,90x37,182,38,19]}'],
        5: ['2a39,272x75,0,0{90x75,0,0,0,90x75,91,0[90x37,91,0,17,90x37,91,38,20],90x75,182,0[90x37,182,0,16,90x37,182,38,19]}'],
        6: ['9dd9,272x75,0,0{90x75,0,0[90x37,0,0,0,90x37,0,38,21],90x75,91,0[90x37,91,0,17,90x37,91,38,20],90x75,182,0[90x37,182,0,16,90x37,182,38,19]}'],
        7: ['6949,272x75,0,0{90x75,0,0[90x37,0,0,0,90x37,0,38,21],90x75,91,0[90x37,91,0,17,90x37,91,38,20],90x75,182,0[90x37,182,0,16,90x18,182,38,19,90x18,182,57,22]}'],
        8: ['74b9,272x75,0,0{90x75,0,0[90x37,0,0,0,90x37,0,38,21],90x75,91,0[90x37,91,0,17,90x37,91,38,20],90x75,182,0[90x18,182,0,16,90x18,182,19,23,90x18,182,38,19,90x18,182,57,22]}'],
    },
}

import math
import os
import subprocess

COUNTER_FILE = '/tmp/tmux-resize-counter'

# Expected width & height values (iTerm2 cols x rows)
MONITOR_SIZES = {
    'Acer': (148, 118),         # 1050 x 1680
    'Lenovo 1/2': (191, 104),   # 1920 x 2160
    'Lenovo': (383, 106),       # 3840 x 2160
    'Native': (204, 59),        # 2560 x 1600
    'ViewSonic': (383, 106),    # 1920 x 1080
}

def get_tmux_window_attr(attribute):
    sp = subprocess.run(
        ['tmux', 'display-message', '-p', '#{window_' + attribute + '}'],
        capture_output=True)
    return int(sp.stdout.decode('utf-8').strip())

my_width = get_tmux_window_attr('width')
my_height = get_tmux_window_attr('height')
my_panes = get_tmux_window_attr('panes')

def calculate_distance(width, height):
    return math.sqrt((my_width - width)**2 + (my_height - height)**2)

my_monitor, min_distance = None, float('inf')
for (monitor, (width, height)) in MONITOR_SIZES.items():
    distance = calculate_distance(width, height)
    if distance < min_distance:
        my_monitor = monitor
        min_distance = distance

my_layouts = LAYOUTS[my_monitor].get(my_panes, []) + [
    'even-horizontal', 'even-vertical', 'tiled']

counter = 0
if os.path.isfile(COUNTER_FILE):
    with open(COUNTER_FILE) as f:
        counter = int(f.read())

index = counter % len(my_layouts)
subprocess.run(['tmux', 'select-layout', my_layouts[index]])

with open(COUNTER_FILE, 'w') as f:
    f.write(str(counter + 1))
